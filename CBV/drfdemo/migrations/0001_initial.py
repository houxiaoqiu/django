# Generated by Django 4.2.3 on 2023-07-21 08:30

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='作者')),
                ('age', models.IntegerField(verbose_name='年龄')),
            ],
            options={
                'verbose_name': '作者',
                'verbose_name_plural': '作者',
                'db_table': 'tb_author',
            },
        ),
        migrations.CreateModel(
            name='NaturalPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('feature', models.CharField(choices=[('LE', '法人'), ('NA', '自然人')], default='NA', max_length=2, verbose_name='特征')),
                ('realationship', models.CharField(choices=[('PA', '合作伙伴'), ('UN', '无关')], default='PA', max_length=2, verbose_name='关系')),
                ('id_type', models.CharField(choices=[('IC', '身份证'), ('EC', '企业代码证')], max_length=2, verbose_name='证件类型')),
                ('id_number', models.CharField(max_length=32, verbose_name='证件号')),
                ('gender', models.CharField(choices=[('M', '男'), ('F', '女'), ('U', '未知')], default='U', max_length=1, verbose_name='性别')),
                ('birthday', models.DateField(verbose_name='生日')),
                ('telephone', models.CharField(max_length=16, verbose_name='电话号码')),
                ('email', models.CharField(max_length=64, verbose_name='电子邮箱')),
            ],
            options={
                'verbose_name': '人员',
                'verbose_name_plural': '人员',
            },
        ),
        migrations.CreateModel(
            name='Publish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='出版商')),
                ('email', models.EmailField(max_length=254, verbose_name='出版商邮箱')),
            ],
            options={
                'verbose_name': '出版商',
                'verbose_name_plural': '出版商',
                'db_table': 'tb_publish',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('gender', models.BooleanField(default=1, verbose_name='性别')),
                ('age', models.IntegerField(default=18, verbose_name='年龄')),
                ('class_number', models.CharField(default='1', max_length=5, verbose_name='班级编号')),
                ('description', models.TextField(default='1', max_length=1024, verbose_name='个性签名')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
                'db_table': 'tb_student',
            },
        ),
        migrations.CreateModel(
            name='LegalPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('feature', models.CharField(choices=[('LE', '法人'), ('NA', '自然人')], default='NA', max_length=2, verbose_name='特征')),
                ('realationship', models.CharField(choices=[('PA', '合作伙伴'), ('UN', '无关')], default='PA', max_length=2, verbose_name='关系')),
                ('id_type', models.CharField(choices=[('IC', '身份证'), ('EC', '企业代码证')], max_length=2, verbose_name='证件类型')),
                ('id_number', models.CharField(max_length=32, verbose_name='证件号')),
                ('short_name', models.CharField(max_length=16, verbose_name='简称')),
                ('address', models.CharField(max_length=128, verbose_name='地址')),
                ('representative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='drfdemo.naturalperson', verbose_name='法人代表')),
            ],
            options={
                'verbose_name': '法人单位',
                'verbose_name_plural': '法人单位',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drfdemo.legalperson', verbose_name='雇主')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='drfdemo.naturalperson', verbose_name='雇员')),
            ],
            options={
                'verbose_name': '雇员',
                'verbose_name_plural': '雇员',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=32, verbose_name='部门名称')),
                ('leal_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drfdemo.legalperson', verbose_name='法人单位')),
                ('parent_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drfdemo.department', verbose_name='上级部门')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='书籍名称')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='价格')),
                ('pub_date', models.DateField(verbose_name='出版日期')),
                ('bread', models.IntegerField(verbose_name='阅读量')),
                ('bcomment', models.IntegerField(verbose_name='评论量')),
                ('authors', models.ManyToManyField(to='drfdemo.author', verbose_name='作者')),
                ('publish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drfdemo.publish', verbose_name='出版商')),
            ],
            options={
                'verbose_name': '书籍',
                'verbose_name_plural': '书籍',
                'db_table': 'tb_book',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('mobile', models.CharField(default='', max_length=11, verbose_name='手机号')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='用户头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drfdemo.naturalperson', verbose_name='用户')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
